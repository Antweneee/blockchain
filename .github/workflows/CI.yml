name: Development CI/CD

on:
  push:
  pull_request:
    branches:
      - dev

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Add these new steps to set up Docker Compose
      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
          echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install -y docker-compose-plugin
          docker compose version

      - name: Replace production URLs with localhost for testing
        run: |
          # Replace in backend files
          sed -i 's|https://cryptoplace.kusmicrew.cloud|http://localhost:3000|g' backend/routes/upload.py
          sed -i 's|https://cryptoplace.kusmicrew.cloud/api/uploads/|http://localhost:5000/uploads/|g' backend/routes/assets.py

          # Replace in frontend files
          sed -i 's|https://cryptoplace.kusmicrew.cloud/api|http://localhost:5000|g' frontend/src/store/index.js
          sed -i 's|https://cryptoplace.kusmicrew.cloud/api|http://localhost:5000|g' frontend/.env

          # Replace in docker-compose.yml
          sed -i 's|VITE_API_URL=https://cryptoplace.kusmicrew.cloud/api|VITE_API_URL=http://localhost:5000|g' docker-compose.yml

          # Create test environment file
          cat > backend/.env << EOL
          FLASK_ENV=testing
          DATABASE_PATH=/data/crypto.db
          SECRET_KEY=test_secret_key_123
          CORS_ALLOW_ORIGINS=http://localhost:3000
          CORS_ALLOW_CREDENTIALS=true
          FLASK_APP=main.py
          XRPL_NODE=wss://s.altnet.rippletest.net:51233
          SESSION_TYPE=filesystem
          SESSION_PERMANENT=true
          PERMANENT_SESSION_LIFETIME=604800
          SECURE_HEADERS=false
          EOL

      - name: Build and start services
        run: |
          docker compose up -d --build
          # Wait for services to be ready
          sleep 30

      - name: Run backend tests
        run: |
          BACKEND_CONTAINER_ID=$(docker ps -a --filter "name=blockchain-backend" --format "{{.ID}}")
          if [ -n "$BACKEND_CONTAINER_ID" ]; then
            docker exec $BACKEND_CONTAINER_ID sh -c "pip install pytest && pytest"
          else
            echo "Error: blockchain-backend container not found." && exit 1
          fi

      - name: Push to main branch
        if: success()
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git checkout main
          git merge dev
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Cleanup
        if: always()
        run: |
          docker compose down -v
